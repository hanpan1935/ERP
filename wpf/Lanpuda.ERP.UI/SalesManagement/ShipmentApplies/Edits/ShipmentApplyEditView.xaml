<UserControl x:Class="Lanpuda.ERP.SalesManagement.ShipmentApplies.Edits.ShipmentApplyEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lanpuda.ERP.SalesManagement.ShipmentApplies.Edits"
             xmlns:hc="https://handyorg.github.io/handycontrol" 
             xmlns:widget="clr-namespace:Lanpuda.Client.Widget;assembly=Lanpuda.Client.Widget" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1400">
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding InitializeAsyncCommand}"/>
        <dxmvvm:KeyToCommand KeyGesture="Enter" Command="{Binding SaveAsyncCommand}"/>
        <dxmvvm:WindowService AllowSetWindowOwner="True" WindowStartupLocation="CenterOwner" WindowShowMode="Dialog">
            <dxmvvm:WindowService.WindowStyle>
                <Style TargetType="Window">
                    <Setter Property="WindowStyle" Value="SingleBorderWindow" />
                    <Setter Property="SizeToContent" Value="Manual" />
                    <Setter Property="ShowInTaskbar" Value="False"></Setter>
                </Style>
            </dxmvvm:WindowService.WindowStyle>
        </dxmvvm:WindowService>
        <dxmvvm:CurrentWindowService />
    </dxmvvm:Interaction.Behaviors>
    <DockPanel Background="{StaticResource AntDesign.PrimaryBackgroundColorBrush}" IsEnabled="{Binding IsLoading,Converter={StaticResource Boolean2BooleanReConverter}}">

        <Border DockPanel.Dock="Top" Style="{StaticResource BorderRegion}" Margin="5">
            <StackPanel>
                <hc:Row Margin="0,10,0,0" Gutter="20" >
                    <hc:Col Span="4">
                        <hc:TextBox hc:InfoElement.Title="申请单号" hc:InfoElement.Necessary="False"  IsEnabled="False" IsReadOnly="True"
                                Text="{Binding Model.Number,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}"
                                hc:TitleElement.TitlePlacement="Left" >
                        </hc:TextBox>
                    </hc:Col>
                    <hc:Col Span="4">
                        <hc:ComboBox ItemsSource="{Binding Model.CustomerSource,UpdateSourceTrigger=PropertyChanged}"  hc:TitleElement.TitlePlacement="Left"
                                     DisplayMemberPath="ShortName" SelectedValuePath="Id"  IsTextSearchEnabled="True"
                                     hc:InfoElement.Title="客户" hc:InfoElement.Necessary="True"  IsEditable="True" AutoComplete="True"
                                     SelectedValue="{Binding Model.CustomerId,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged , ValidatesOnDataErrors=True ,ValidatesOnExceptions=True,NotifyOnValidationError=True}" 
                                 >
                        </hc:ComboBox>
                    </hc:Col>
                    <hc:Col Span="4">
                        <hc:TextBox hc:TitleElement.TitlePlacement="Left" hc:InfoElement.Title="收货人" hc:InfoElement.Necessary="False" 
                                   Text="{Binding Model.Consignee,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged , ValidatesOnDataErrors=True ,ValidatesOnExceptions=True,NotifyOnValidationError=True}">
                        </hc:TextBox>
                    </hc:Col>
                    <hc:Col Span="4">
                        <hc:TextBox hc:TitleElement.TitlePlacement="Left" hc:InfoElement.Title="收货电话" hc:InfoElement.Necessary="False" 
                                   Text="{Binding Model.ConsigneeTel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged , ValidatesOnDataErrors=True ,ValidatesOnExceptions=True,NotifyOnValidationError=True}">
                        </hc:TextBox>
                    </hc:Col>
                    <hc:Col Span="6">
                        <hc:TextBox hc:TitleElement.TitlePlacement="Left" hc:InfoElement.Title="地址" hc:InfoElement.Necessary="False"  
                                   Text="{Binding Model.ShippingAddress,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged , ValidatesOnDataErrors=True ,ValidatesOnExceptions=True,NotifyOnValidationError=True}">
                        </hc:TextBox>
                    </hc:Col>
                </hc:Row>

            </StackPanel>
        </Border>
        <Border DockPanel.Dock="Bottom" Style="{ StaticResource BorderRegion}" Margin="0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Command="{Binding CloseCommand}"  Content="关闭" Style="{StaticResource ButtonDefault}" Margin="10,0"></Button>
                <Button Command="{Binding SaveAsyncCommand}"  Content="保存" Style="{StaticResource ButtonPrimary}" Margin="10,0"></Button>
            </StackPanel>
        </Border>

        <Border Style="{StaticResource BorderRegion}" Margin="5">
            <DataGrid Style="{StaticResource AntDesign.DataGrid.Editable}" Margin="0" SelectionMode="Single" RowHeight="70"
                          SelectedItem="{Binding Model.SelectedRow,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" 
                          hc:DataGridAttach.ShowRowNumber="True"  HeadersVisibility="All" 
                          ItemsSource="{Binding Model.Details,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                <DataGrid.Columns>
                    <DataGridTemplateColumn CanUserSort="False"  Header="申请数量" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <hc:TextBox Text="{Binding Quantity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged , ValidatesOnDataErrors=True }">
                                </hc:TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding SalesOrderNumber}"      Header="订单编号"  Width="1*" MinWidth="100"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding ProductName}"      Header="产品名称"   Width="1*" MinWidth="100"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding ProductSpec}"      Header="产品规格"   Width="1*" MinWidth="100"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding ProductUnitName}"      Header="产品单位" Width="1*"  MinWidth="100"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding OrderQuantity}"    Header="订单数量" Width="1*"  MinWidth="100"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding DeliveryDate,StringFormat= {}{0: yyyy-MM-dd}}"     Header="交货日期"  Width="1*"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding Requirement}"      Header="特殊要求" Width="1*"  MinWidth="200"  IsReadOnly="True"/>
                    <DataGridTemplateColumn Header="操作" MinWidth="100" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" >
                                    <Button Command="{Binding DataContext.DeleteSelectedRowCommand,RelativeSource= {RelativeSource AncestorType=UserControl}}" 
                                            Content="删除" Margin="5"
                                            Style="{DynamicResource AntDesign.LinkButtonStyle}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.ContextMenu>
                    <ContextMenu  StaysOpen="true">
                        <MenuItem Command="{Binding ShowSelectOrderWindowCommand}"  Header="选择订单" Style="{StaticResource MenuItemBaseStyle}"/>
                        <MenuItem Command="{Binding DeleteSelectedRowCommand}"  Header="删除" Style="{StaticResource MenuItemBaseStyle}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>
        </Border>
    </DockPanel>
</UserControl>

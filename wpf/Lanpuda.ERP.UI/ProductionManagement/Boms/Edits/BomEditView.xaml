<UserControl x:Class="Lanpuda.ERP.ProductionManagement.Boms.Edits.BomEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lanpuda.ERP.ProductionManagement.Boms.Edits"
             mc:Ignorable="d" 
             xmlns:hc="https://handyorg.github.io/handycontrol" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             xmlns:converters="clr-namespace:Lanpuda.Client.Theme.Converters;assembly=Lanpuda.Client.Theme"
             d:DesignHeight="900" d:DesignWidth="1600">
    <UserControl.Resources>
        <converters:DisplayAttributeToStringConverter x:Key="DisplayAttributeToStringConverter"></converters:DisplayAttributeToStringConverter>
        <converters:BoolToStringConverter x:Key="BoolToStringConverter"></converters:BoolToStringConverter>
    </UserControl.Resources>
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding InitializeAsyncCommand}"/>
        <dxmvvm:WindowService AllowSetWindowOwner="True" WindowStartupLocation="CenterOwner" WindowShowMode="Dialog">
            <dxmvvm:WindowService.WindowStyle>
                <Style TargetType="Window">
                    <Setter Property="WindowStyle" Value="SingleBorderWindow" />
                    <Setter Property="SizeToContent" Value="Manual" />
                    <Setter Property="ShowInTaskbar" Value="False"></Setter>
                </Style>
            </dxmvvm:WindowService.WindowStyle>
        </dxmvvm:WindowService>
        <dxmvvm:CurrentWindowService />
    </dxmvvm:Interaction.Behaviors>
    <DockPanel Background="{StaticResource AntDesign.PrimaryBackgroundColorBrush}" IsEnabled="{Binding IsLoading,Converter={StaticResource Boolean2BooleanReConverter}}">
        <Border DockPanel.Dock="Top" Style="{StaticResource BorderRegion}" Margin="5">
            <hc:Row Margin="0,10,0,0" Gutter="20" >
                <hc:Col Span="2">
                    <Button Content="选择主产品" Command="{Binding ShowSelectMainProductWindowCommand}" Style="{StaticResource ButtonPrimary}" HorizontalAlignment="Left"></Button>
                </hc:Col>
                <hc:Col Span="4">
                    <hc:TextBox hc:InfoElement.Title="备注" hc:InfoElement.Necessary="False"  
                                Text="{Binding Model.Remark,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}"
                                hc:TitleElement.TitlePlacement="Left">
                    </hc:TextBox>
                </hc:Col>
               
                <hc:Col Span="4">
                    <hc:TextBox hc:InfoElement.Title="主产品名称" hc:InfoElement.Necessary="False"  BorderThickness="0" IsReadOnly="True"
                                Text="{Binding Model.ProductName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}"
                                hc:TitleElement.TitlePlacement="Left">
                    </hc:TextBox>
                </hc:Col>
                <hc:Col Span="4">
                    <hc:TextBox hc:InfoElement.Title="主产品规格" hc:InfoElement.Necessary="False"  BorderThickness="0" IsReadOnly="True"
                                Text="{Binding Model.ProductSpec,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}"
                                hc:TitleElement.TitlePlacement="Left">
                    </hc:TextBox>
                </hc:Col>
                <hc:Col Span="4">
                    <hc:TextBox hc:InfoElement.Title="主产品单位" hc:InfoElement.Necessary="False"  BorderThickness="0" IsReadOnly="True"
                                Text="{Binding Model.ProductUnitName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}"
                                hc:TitleElement.TitlePlacement="Left">
                    </hc:TextBox>
                </hc:Col>
            </hc:Row>
        </Border>

        <Border DockPanel.Dock="Bottom" Style="{ StaticResource BorderRegion}" Margin="0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Command="{Binding CloseCommand}" Content="关闭" Style="{StaticResource ButtonDefault}" Margin="10,0"></Button>
                <Button Command="{Binding SaveAsyncCommand}" Content="保存" Style="{StaticResource ButtonPrimary}"></Button>
            </StackPanel>
        </Border>

        <Border Style="{StaticResource BorderRegion}" Margin="5">
            <DataGrid Style="{StaticResource AntDesign.DataGrid.Editable}" Margin="0" SelectionMode="Single" RowHeight="70"
                          SelectedItem="{Binding Model.SelectedRow,Mode=TwoWay}" VerticalScrollBarVisibility="Auto" 
                          hc:DataGridAttach.ShowRowNumber="True"  HeadersVisibility="All" 
                          ItemsSource="{Binding Model.Details,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                <DataGrid.Columns>
                    <DataGridTemplateColumn CanUserSort="False"  Header="标准用量" Width="1*" MinWidth="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <hc:TextBox Text="{Binding Quantity ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}">
                                </hc:TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding ProductName}" Header="产品名称"  Width="1*" MinWidth="100"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding ProductUnitName}" Header="产品单位"  Width="1*" MinWidth="100"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding ProductSourceType,Converter={StaticResource DisplayAttributeToStringConverter}}" Header="产品获取途径"  Width="1*" MinWidth="100"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding ProductSpec}" Header="产品规格"  Width="1*" MinWidth="100"  IsReadOnly="True"/>
                    <DataGridTemplateColumn Header="操作"  Width="1*" MinWidth="100" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" >
                                    <Button Command="{Binding DataContext.DeleteSelectedRowCommand,RelativeSource= {RelativeSource AncestorType=UserControl}}" 
                                            Content="删除" Margin="5"
                                            Style="{DynamicResource AntDesign.LinkButtonStyle}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.ContextMenu>
                    <ContextMenu  StaysOpen="true">
                        <MenuItem Command="{Binding ShowAddProductWindowCommand}"  Header="添加" Style="{StaticResource MenuItemBaseStyle}"/>
                        <MenuItem Command="{Binding DeleteSelectedRowCommand}"  Header="删除" Style="{StaticResource MenuItemBaseStyle}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>
        </Border>
    </DockPanel>
</UserControl>

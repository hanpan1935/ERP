<UserControl x:Class="Lanpuda.ERP.ProductionManagement.MaterialApplies.Edits.MaterialApplyEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lanpuda.ERP.ProductionManagement.MaterialApplies.Edits"
             mc:Ignorable="d" 
             xmlns:hc="https://handyorg.github.io/handycontrol" 
             xmlns:widget="clr-namespace:Lanpuda.Client.Widget;assembly=Lanpuda.Client.Widget" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             d:DesignHeight="900" d:DesignWidth="1600">
    <UserControl.Resources>
    </UserControl.Resources>
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding InitializeAsyncCommand}"/>
        <dxmvvm:WindowService AllowSetWindowOwner="True" WindowStartupLocation="CenterScreen" WindowShowMode="Dialog">
            <dxmvvm:WindowService.WindowStyle>
                <Style TargetType="Window">
                    <Setter Property="WindowStyle" Value="SingleBorderWindow" />
                    <Setter Property="ShowInTaskbar" Value="False"></Setter>
                </Style>
            </dxmvvm:WindowService.WindowStyle>
        </dxmvvm:WindowService>
        <dxmvvm:CurrentWindowService />
    </dxmvvm:Interaction.Behaviors>
    <DockPanel Background="{StaticResource AntDesign.PrimaryBackgroundColorBrush}" IsEnabled="{Binding IsLoading,Converter={StaticResource Boolean2BooleanReConverter}}">
        <Border DockPanel.Dock="Top" Style="{StaticResource BorderRegion}" Margin="5">
            <StackPanel>
                <hc:Row Margin="0,0,0,0" Gutter="20" >
                    <hc:Col Span="4">
                        <hc:TextBox hc:InfoElement.Title="领料单号" IsEnabled="False"
                                    Text="{Binding Model.Number,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}"
                                    hc:TitleElement.TitlePlacement="Left">
                        </hc:TextBox>
                    </hc:Col>
                    <hc:Col Span="6">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="8*"></ColumnDefinition>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <hc:TextBox hc:InfoElement.Title="工单编号" hc:InfoElement.Necessary="True"  IsReadOnly="True"
                                Text="{Binding Model.WorkOrderNumber,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}"
                                hc:TitleElement.TitlePlacement="Left">
                            </hc:TextBox>
                            <Button Content="" Grid.Column="1" hc:IconElement.Geometry="{StaticResource SearchGeometry}" 
                                    Command="{Binding ShowSelectWorkOrderWindowCommand}" />
                        </Grid>
                    </hc:Col>
                    <hc:Col Span="6">
                        <hc:TextBox hc:InfoElement.Title="备注" hc:InfoElement.Necessary="False"
                                    Text="{Binding Model.Remark,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged ,ValidatesOnDataErrors=True}"
                                    hc:TitleElement.TitlePlacement="Left">
                        </hc:TextBox>
                    </hc:Col>
                </hc:Row>
            </StackPanel>
        </Border>
        <Border DockPanel.Dock="Bottom" Style="{ StaticResource BorderRegion}" Margin="0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Command="{Binding CloseCommand}" Content="关闭" Style="{StaticResource ButtonDefault}" Margin="10,0"></Button>
                <Button Command="{Binding SaveAsyncCommand}" Content="保存" Style="{StaticResource ButtonPrimary}"></Button>
            </StackPanel>
        </Border>

        <Border Style="{StaticResource BorderRegion}" Margin="5">
            <DataGrid Style="{StaticResource AntDesign.DataGrid.Editable}" Margin="0" SelectionMode="Single" RowHeight="70"
                          SelectedItem="{Binding Model.SelectedRow,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" 
                          hc:DataGridAttach.ShowRowNumber="True"  HeadersVisibility="All" 
                          ItemsSource="{Binding Model.Details,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding ProductNumber}" Header="产品编码" Width="1*" MinWidth="150"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding ProductName}" Header="产品名称" Width="1*" MinWidth="150"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding ProductSpec}" Header="产品规格" Width="1*" MinWidth="150"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding ProductUnitName}" Header="产品单位" Width="1*" MinWidth="150"  IsReadOnly="True"/>
                    <DataGridTextColumn Binding="{Binding StandardQuantity}" Header="标准用量" Width="1*" MinWidth="150"  IsReadOnly="True"/>
                    <DataGridTemplateColumn CanUserSort="False"  Header="本次领用数量" Width="1*" MinWidth="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <hc:TextBox Text="{Binding Quantity ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}">
                                </hc:TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="操作" Width="1*" MinWidth="150" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" >
                                    <Button Command="{Binding DataContext.DeleteSelectedRowCommand,RelativeSource= {RelativeSource AncestorType=UserControl}}" 
                                            CommandParameter="{Binding Id}" Content="删除" Margin="5"
                                            Style="{DynamicResource AntDesign.LinkButtonStyle}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.ContextMenu>
                    <ContextMenu  StaysOpen="true">
                        <MenuItem Command="{Binding ShowSelectProductWindowCommand}"  Header="添加" Style="{StaticResource MenuItemBaseStyle}"/>
                        <MenuItem Command="{Binding InputQuantityByStandardCommand}"  Header="按标准领用" Style="{StaticResource MenuItemBaseStyle}"/>
                        <MenuItem Command="{Binding DeleteSelectedRowCommand}"  Header="删除" Style="{StaticResource MenuItemBaseStyle}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>
        </Border>
    </DockPanel>
</UserControl>
